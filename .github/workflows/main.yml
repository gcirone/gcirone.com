name: site
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/node_modules/.cache

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - uses: actions/cache@v2
        id: modules-cache # use this to check for `cache-hit` (`steps.modules-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-modules-

      - uses: actions/setup-node@v2
        with:
          node-version: 12.x

      - if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
          yarn cypress install && yarn cypress verify

      - run: |
          yarn lint
          yarn prerender
        env:
          NODE_ENV: production

      - uses: actions/upload-artifact@v2
        with:
          name: gcirone-site
          path: dist/site/browser    

  tests:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-scripts: [ test, e2e ]
    env:
      NODE_ENV: production

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: modules-cache # use this to check for `cache-hit` (`steps.modules-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-modules-

      - uses: actions/setup-node@v2
        with:
          node-version: 12.x

      - run: yarn ${{ matrix.node-scripts }}




