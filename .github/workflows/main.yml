name: site
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 12.x ]
        node-scripts: [ prerender, test ]
    env:
      CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/node_modules/.cache

    steps:
      - uses: actions/checkout@v2

      - run: |
          echo "yarn cache $(yarn cache dir)"
          echo $CYPRESS_CACHE_FOLDER

       - id: yarn-cache-dir-path
         run: echo "::set-output name=dir::$(yarn cache dir)"

       - uses: actions/cache@v2
         id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
         with:
           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
           restore-keys: |
             ${{ runner.os }}-yarn-

       - uses: actions/cache@v2
         id: modules-cache # use this to check for `cache-hit` (`steps.modules-cache.outputs.cache-hit != 'true'`)
         with:
           path: '**/node_modules'
           key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
           restore-keys: |
             ${{ runner.os }}-modules-

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - run: |
          echo "cache $GITHUB_WORKSPACE/node_modules/.cache"
          echo $CYPRESS_CACHE_FOLDER

      - run: yarn install --frozen-lockfile

      #- run: echo "Run script ${{ matrix.node-scripts }}"

      #- run: yarn prerender
      #- run: yarn test
      - run: |
          yarn cypress cache path
          yarn cypress cache list
          npx cypress install --force

      - run: yarn e2e
